inp = bytes.fromhex("3082d99f70d36a8f0aad4d95e47c22e6ec9ec0bbc8afd372651a29")
inplen = len(inp)
bits = ""

def to_le_bits(byte, width):
    return bin(byte)[2:].zfill(width)[::-1]

def from_le_bits(bs):
    return int(bs[::-1], 2)

for b in inp:
    bits += to_le_bits(b, 8)

sbox = {473: 1, 72: 2, 368: 3, 217: 4, 395: 5, 127: 6, 425: 7, 380: 8, 167: 9, 197: 11, 506: 12, 480: 13, 27: 14, 32: 15, 333: 16, 407: 17, 377: 18, 182: 19, 82: 20, 38: 21, 403: 22, 293: 23, 382: 24, 241: 25, 510: 26, 324: 27, 144: 28, 263: 29, 163: 30, 0: 31, 417: 32, 292: 33, 302: 34, 40: 35, 476: 36, 198: 37, 501: 38, 160: 39, 414: 40, 213: 41, 391: 42, 348: 43, 88: 44, 313: 45, 117: 46, 436: 47, 383: 48, 400: 49, 294: 50, 73: 51, 37: 52, 352: 53, 229: 54, 423: 55, 31: 56, 135: 57, 355: 58, 112: 59, 111: 60, 98: 61, 255: 62, 5: 63, 23: 64, 77: 65, 468: 66, 154: 67, 374: 68, 178: 69, 86: 70, 351: 71, 41: 72, 134: 73, 326: 74, 78: 75, 410: 76, 507: 77, 411: 78, 12: 79, 192: 80, 339: 81, 461: 82, 49: 83, 364: 84, 235: 85, 420: 86, 490: 87, 125: 88, 502: 89, 478: 90, 131: 91, 361: 92, 185: 93, 44: 94, 429: 95, 29: 96, 366: 97, 278: 98, 446: 99, 177: 100, 216: 101, 250: 102, 48: 103, 92: 104, 320: 105, 438: 106, 70: 107, 486: 108, 412: 109, 430: 110, 266: 111, 206: 112, 378: 113, 91: 114, 450: 115, 42: 116, 464: 117, 174: 118, 322: 119, 319: 120, 453: 121, 481: 122, 434: 123, 338: 124, 504: 125, 359: 126, 491: 127, 242: 128, 218: 129, 474: 130, 318: 131, 442: 132, 209: 133, 141: 134, 143: 135, 109: 136, 244: 137, 335: 138, 372: 139, 43: 140, 316: 141, 142: 142, 388: 143, 418: 144, 336: 145, 397: 146, 262: 147, 155: 148, 51: 149, 201: 150, 439: 151, 237: 152, 503: 153, 449: 154, 157: 155, 365: 156, 369: 157, 310: 158, 118: 159, 330: 160, 54: 161, 7: 162, 108: 163, 139: 164, 214: 165, 272: 166, 46: 167, 232: 168, 394: 169, 332: 170, 81: 171, 447: 172, 211: 173, 6: 174, 413: 175, 356: 176, 110: 177, 445: 178, 347: 179, 83: 180, 477: 181, 415: 182, 444: 183, 3: 184, 193: 185, 268: 186, 309: 187, 220: 188, 350: 189, 398: 190, 496: 191, 221: 192, 231: 193, 295: 194, 156: 195, 416: 196, 230: 197, 188: 198, 96: 199, 325: 200, 87: 201, 390: 202, 443: 203, 223: 204, 435: 205, 387: 206, 239: 207, 21: 208, 136: 209, 281: 210, 375: 211, 386: 212, 360: 213, 393: 214, 234: 215, 459: 216, 190: 217, 341: 218, 406: 219, 317: 220, 315: 221, 74: 222, 240: 223, 189: 224, 101: 225, 10: 226, 79: 227, 466: 228, 343: 229, 471: 230, 243: 231, 497: 232, 148: 233, 362: 234, 469: 235, 59: 236, 509: 237, 296: 238, 290: 239, 159: 240, 34: 241, 457: 242, 488: 243, 222: 244, 124: 245, 376: 246, 279: 247, 373: 248, 123: 249, 508: 250, 204: 251, 331: 252, 128: 253, 277: 254, 11: 255, 1: 257, 384: 258, 30: 259, 422: 260, 65: 261, 254: 262, 187: 263, 208: 264, 511: 265, 85: 267, 273: 268, 126: 269, 133: 270, 172: 271, 482: 272, 472: 273, 181: 274, 437: 275, 75: 276, 225: 277, 291: 278, 265: 279, 379: 280, 500: 281, 179: 282, 186: 283, 245: 284, 314: 285, 26: 286, 312: 287, 363: 288, 238: 289, 304: 290, 288: 291, 454: 292, 489: 293, 274: 294, 103: 295, 282: 296, 456: 297, 248: 298, 97: 299, 22: 300, 33: 301, 276: 302, 353: 303, 487: 304, 140: 305, 28: 306, 301: 307, 271: 308, 499: 309, 260: 310, 57: 311, 494: 312, 251: 313, 256: 314, 286: 315, 327: 316, 63: 317, 64: 318, 52: 319, 280: 320, 102: 321, 184: 322, 39: 323, 169: 324, 287: 325, 261: 326, 15: 327, 183: 328, 113: 329, 463: 330, 344: 331, 452: 332, 428: 333, 100: 334, 207: 335, 129: 336, 253: 337, 219: 338, 328: 339, 215: 340, 392: 341, 426: 342, 311: 343, 94: 344, 9: 345, 76: 346, 367: 347, 20: 348, 396: 349, 122: 350, 18: 351, 199: 352, 479: 353, 50: 354, 470: 355, 55: 356, 264: 357, 145: 358, 194: 359, 389: 360, 483: 361, 492: 362, 306: 363, 448: 364, 354: 365, 349: 366, 19: 367, 269: 368, 275: 369, 53: 370, 16: 371, 381: 372, 80: 373, 84: 374, 337: 375, 95: 376, 171: 377, 62: 378, 249: 379, 4: 380, 56: 381, 205: 382, 227: 383, 69: 384, 431: 385, 424: 386, 149: 387, 340: 388, 99: 389, 505: 390, 247: 391, 89: 392, 212: 393, 451: 394, 226: 395, 168: 396, 61: 397, 236: 398, 165: 399, 270: 400, 405: 401, 267: 402, 66: 403, 170: 404, 180: 405, 433: 406, 498: 407, 130: 408, 164: 409, 166: 410, 345: 411, 158: 412, 224: 413, 475: 414, 321: 415, 191: 416, 151: 417, 14: 418, 308: 419, 35: 420, 259: 421, 200: 422, 210: 423, 90: 424, 342: 425, 408: 426, 385: 427, 47: 428, 114: 429, 460: 430, 67: 431, 401: 432, 305: 433, 71: 434, 300: 435, 45: 436, 346: 437, 176: 438, 173: 439, 146: 440, 299: 441, 427: 442, 132: 443, 93: 444, 323: 445, 2: 446, 175: 447, 467: 448, 120: 449, 455: 450, 484: 451, 357: 452, 462: 453, 440: 454, 8: 455, 196: 456, 409: 457, 195: 458, 58: 459, 421: 460, 119: 461, 307: 462, 284: 463, 257: 464, 495: 465, 147: 466, 404: 467, 107: 468, 334: 469, 68: 470, 252: 471, 138: 472, 493: 473, 297: 474, 162: 475, 116: 476, 419: 477, 371: 478, 283: 479, 104: 480, 25: 481, 485: 482, 258: 483, 329: 484, 137: 485, 13: 486, 161: 487, 402: 488, 441: 489, 358: 490, 106: 491, 36: 492, 115: 493, 228: 494, 298: 495, 246: 496, 24: 497, 285: 498, 121: 499, 458: 500, 105: 501, 152: 502, 399: 503, 60: 504, 233: 505, 465: 506, 289: 507, 303: 508, 17: 509, 153: 510, 202: 511}
input_bits = ""
for i in range(0, len(bits), 9):
    chunk = bits[i:i+9]
    input_bits += to_le_bits(sbox[from_le_bits(chunk)], 9)

for i in range(0, len(bits), 8):
    chunk = input_bits[i:i+8]
    print(chr(from_le_bits(chunk)), end="")

