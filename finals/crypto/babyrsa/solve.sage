
N1 = 12495068391856999800077002030530346154633251410701993364552383316643702466683773454456456597802923936206937481367758944533287430192110874917786936470363369
N2 = 8077707147198053886290544832343186898331956960638623080378558119874814319984246411074010515131637149736377313917292767376808884023937736055240325038442951
N3 = 10898848501176222929758568549735934974173617359760346224710269537956982757903808181573409877312658404512178685311838325609151823971632352375145906550988157
c1 = 11727185096615670493479944410151790761335959794363922757994065463882149941932060937572492050251349085994568934453243128190891922383731914525051578359318783
c2 = 2327979828535262192716931468063741561142276160684415064469817644730647222015445750643448615540518244828488228477943010970450757391003276726177736335376022
c3 = 4544692061471147250554940137677403449389851357903927336833646427737782533445020327768883285489907725322030741572216172954958842207101301502851102081477126

# part 1
p,q,r = ZZ['p,q,r'].gens()
P = 2*p + 1
Q = 2*q + 1
R = 2*r + 1

I = ideal(p*Q - N1,  q*R - N2, r*P - N3)

B = I.groebner_basis()
print(B[3].factor())

#part 2
r = 59354006955050413613870498562109333667808649546777985016017887869485489005019
p = (N3 // r - 1) // 2
q = N2 // (2*r + 1)

phi1 = 2*q*(p-1)
phi2 = 2*r*(q-1)
phi3 = 2*p*(r-1)
e = 0x10001

d1 = inverse_mod(e, phi1)
d2 = inverse_mod(e, phi2)
d3 = inverse_mod(e, phi3)

m1 = pow(c1, d1, N1)
m2 = pow(c2, d2, N2)
m3 = pow(c3, d3, N3)

print(m1, m2, m3)
